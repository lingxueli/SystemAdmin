Find all files that have the SUID permission set, and write the result to the file
/root/suidfiles.


[root@localhost /]# find / -perm /u+s > /root/suidfiles
OR
[root@localhost /]# find / -perm -4000 > /root/suidfiles2


[root@localhost /]# man find
NAME
       find - search for files in a directory hierarchy

SYNOPSIS
       find  [-H]  [-L]  [-P]  [-D  debugopts]  [-Olevel]  [starting-point...]
       [expression]
       
EXPRESSION
       -perm mode
              File's permission bits are exactly  mode  (octal  or  symbolic).
              Since  an  exact match is required, if you want to use this form
              for symbolic modes, you may have to  specify  a  rather  complex
              mode  string.   For  example  `-perm  g=w' will only match files
              which have mode 0020 (that is, ones for which group  write  per‐
              mission is the only permission set).  It is more likely that you
              will want to use the `/' or `-' forms, for example `-perm -g=w',
              which  matches  any  file  with group write permission.  See the
              EXAMPLES section for some illustrative examples.

       -perm -mode
              All of the permission bits mode are set for the file.   Symbolic
              modes  are accepted in this form, and this is usually the way in
              which you would want to use them.  You must specify `u', `g'  or
              `o'  if  you use a symbolic mode.   See the EXAMPLES section for
              some illustrative examples.

       -perm /mode
              Any of the permission bits mode are set for the file.   Symbolic
              modes  are  accepted in this form.  You must specify `u', `g' or
              `o' if you use a symbolic mode.  See the  EXAMPLES  section  for
              some  illustrative  examples.  If no permission bits in mode are
              set, this test matches any file (the idea here is to be  consis‐
              tent with the behaviour of -perm -000).

       -perm +mode
              This  is  no  longer  supported  (and  has been deprecated since
              2005).  Use -perm /mode instead.

EXAMPLES
       find / \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \
       \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)

       Traverse the filesystem just once, listing setuid files and directories
       into /root/suid.txt and large files into /root/big.txt.
       
       find . -perm 664

       Search for files which have read and write permission for their  owner,
       and  group,  but  which  other  users can read but not write to.  Files
       which meet these criteria but have  other  permissions  bits  set  (for
       example if someone can execute the file) will not be matched.

       find . -perm -664

       Search  for  files which have read and write permission for their owner
       and group, and which other users can read, without regard to the  pres‐
       ence  of  any  extra  permission bits (for example the executable bit).
       This will match a file which has mode 0777, for example.
       
       find . -perm /222

       Search for files which are writable by somebody (their owner, or  their
       group, or anybody else).

       find . -perm /220
       find . -perm /u+w,g+w
       find . -perm /u=w,g=w

       All  three  of these commands do the same thing, but the first one uses
       the octal representation of the file mode, and the other  two  use  the
       symbolic  form.  These commands all search for files which are writable
       by either their owner or their group.   The  files  don't  have  to  be
       writable by both the owner and group to be matched; either will do.

       find . -perm -220
       find . -perm -g+w,u+w

       Both  these  commands  do  the  same  thing; search for files which are
       writable by both their owner and their group.

       find . -perm -444 -perm /222 ! -perm /111
       find . -perm -a+r -perm /a+w ! -perm /a+x

       These two commands both search for files that are readable  for  every‐
       body  (  -perm  -444  or -perm -a+r), have at least one write bit set (
       -perm /222 or -perm /a+w) but are not executable for anybody ( !  -perm
       /111 and ! -perm /a+x respectively).