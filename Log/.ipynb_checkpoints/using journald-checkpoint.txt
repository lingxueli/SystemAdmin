$ man -k journal
coredumpctl (1)      - Retrieve coredumps from the journal
journal-remote.conf (5) - Journal remote service configuration files
journal-remote.conf.d (5) - Journal remote service configuration files
journalctl (1)       - Query the systemd journal
journald.conf (5)    - Journal service configuration files
journald.conf.d (5)  - Journal service configuration files
systemd-cat (1)      - Connect a pipeline or program's output with the journal
systemd-journal-upload (8) - Send journal messages over the network
systemd-journald (8) - Journal service
systemd-journald.service (8) - Journal service
systemd-journald.socket (8) - Journal service
systemd.journal-fields (7) - Special journal fields


JOURNALCTL(1)                                                       journalctl                                                       JOURNALCTL(1)

NAME
       journalctl - Query the systemd journal

SYNOPSIS
       journalctl [OPTIONS...] [MATCHES...]

DESCRIPTION
       journalctl may be used to query the contents of the systemd(1) journal as written by systemd-journald.service(8).


       -f, --follow
           Show only the most recent journal entries, and continuously print new entries as they are appended to the journal.

       --no-pager
           Do not pipe output into a pager.

       -n, --lines=
           Show the most recent journal events and limit the number of events shown. If --follow is used, this option is implied. The argument is
           a positive integer or "all" to disable line limiting. The default value is 10 if no argument is given.

       -p, --priority=
           Filter output by message priorities or priority ranges. Takes either a single numeric or textual log level (i.e. between 0/"emerg" and
           7/"debug"), or a range of numeric/text log levels in the form FROM..TO. The log levels are the usual syslog log levels as documented in
           syslog(3), i.e.  "emerg" (0), "alert" (1), "crit" (2), "err" (3), "warning" (4), "notice" (5), "info" (6), "debug" (7). If a single log
           level is specified, all messages with this log level or a lower (hence more important) log level are shown. If a range is specified,
           all messages within the range are shown, including both the start and the end value of the range. This will add "PRIORITY=" matches for
           the specified priorities.

       -S, --since=, -U, --until=
           Start showing entries on or newer than the specified date, or on or older than the specified date, respectively. Date specifications
           should be of the format "2012-10-30 18:17:16". If the time part is omitted, "00:00:00" is assumed. If only the seconds component is
           omitted, ":00" is assumed. If the date component is omitted, the current day is assumed. Alternatively the strings "yesterday",
           "today", "tomorrow" are understood, which refer to 00:00:00 of the day before the current day, the current day, or the day after the
           current day, respectively.  "now" refers to the current time. Finally, relative times may be specified, prefixed with "-" or "+",
           referring to times before or after the current time, respectively.

       -o, --output=
           Controls the formatting of the journal entries that are shown. Takes one of the following options:

           short
               is the default and generates an output that is mostly identical to the formatting of classic syslog files, showing one line per
               journal entry.

           verbose
               shows the full-structured entry items with all fields.

       -k, --dmesg
           Show only kernel messages. This implies -b and adds the match "_TRANSPORT=kernel".
SEE ALSO
       systemd(1), systemd-journald.service(8), systemctl(1), coredumpctl(1), systemd.journal-fields(7), journald.conf(5)


$ journalctl
$ journalctl -f
$ journalctl -n 20
$ journalctl -p err
$ journalctl --since yesterday -p err

$ journalctl --no-pager

$ journalctl _UID=1000

# this shows options for each log, later these options can be used as filters
$ journalctl -o verbose
$ journalctl _SYSTEMD_UNIT=sshd.service


$ journalctl --dmesg

# search log based on matches

JOURNALCTL(1)                                                       journalctl                                                       JOURNALCTL(1)

NAME
       journalctl - Query the systemd journal

SYNOPSIS
       journalctl [OPTIONS...] [MATCHES...]


DESCRIPTION
       journalctl may be used to query the contents of the systemd(1) journal as written by systemd-journald.service(8).

       If called without parameters, it will show the full contents of the journal, starting with the oldest entry collected.

       If one or more match arguments are passed, the output is filtered accordingly. A match is in the format "FIELD=VALUE", e.g.
       "_SYSTEMD_UNIT=httpd.service", referring to the components of a structured journal entry. See systemd.journal-fields(7) for a list of
       well-known fields. If multiple matches are specified matching different fields, the log entries are filtered by both, i.e. the resulting
       output will show only entries matching all the specified matches of this kind. If two matches apply to the same field, then they are
       automatically matched as alternatives, i.e. the resulting output will show entries matching any of the specified matches for the same
       field. Finally, the character "+" may appears as a separate word between other terms on the command line. This causes all matches before
       and after to be combined in a disjunction (i.e. logical OR).


man systemd.journal-fields
SYSTEMD.JOURNAL-FIELDS(7)                                     systemd.journal-fields                                     SYSTEMD.JOURNAL-FIELDS(7)

NAME
       systemd.journal-fields - Special journal fields

DESCRIPTION
       Entries in the journal resemble an environment block in their syntax but with fields that can include binary data. Primarily, fields are
       formatted UTF-8 text strings, and binary formatting is used only where formatting as UTF-8 text strings makes little sense. New fields may
       freely be defined by applications, but a few fields have special meaning. All fields with special meanings are optional. In some cases,
       fields may appear more than once per entry.
