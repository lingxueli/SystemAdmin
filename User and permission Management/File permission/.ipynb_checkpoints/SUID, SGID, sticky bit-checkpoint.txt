Exampe of SUID(set user ID):

SUID is only used on file, not directory.

/usr/bin/passwd has SUID set up for normal user to change password.

Because when a user changes his password, it needs root permission to write to /etc/shadow. Only root user can do that.

[root@localhost /]# ls -l /etc/shadow
----------. 1 root root 1472 Jan 23 15:48 /etc/shadow

Normal user gain the root permission through /usr/bin/passwd. because passwd has SUID == 1. User running passwd will take over the same permission as passwd's owner - root. Then this user is able to change the shadow file.

[root@localhost /]# ls -l /usr/bin/passwd
-rwsr-xr-x. 1 root root 33600 Apr  6  2020 /usr/bin/passwd

In summary, SUID:
    on files - user executes file with permission of the file owner
    on directory - no meaning
    
    

Example of SGID(set group ID):

SGID set on a file has the same effect of an SUID. The user executes the files gains the same permission of the group owner of the file.

SGID set on a directory makes it a shared directory of the group. The subdirectoryes and file of that directory will claim the same group owner as the directory's.

The claimed group becomes the group owner of the directory and also its subdirectories and files under it.

In summary, SGID
    on file - user executes file with permissions of group owner
    on directory - files created in diretory get the same group owner
    
    
Sticky bit:

Sticky bit is only used on directory.

Sticky bit is used on shared group directory. It prevents users from deleting files from other users.

A user can only delete the file if either of the following is true:

1. user is the owner of the file
2. user is the owner of the directory where the file exists


For the command line tools used to make these changes, pls check other txt file in the directory - Create shared group directory.txt

How to apply these permissions?

absolute mode:
SUID = 4, SGID = 2, Sticky bit = 1

Add these as an extra digit in front of normal permission bits

# add SGID to directory
chmod 2755 /domedir

relative mode:

# set SUID
chmod u+s somefile

# set SGID
chmod g+s /somedirectory

# set sticky bit
chmod +t /somedirectory


[root@localhost lisa]# man chmod

NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chmod.  chmod changes the
       file mode bits of each given file  according  to  mode,  which  can  be
       either a symbolic representation of changes to make, or an octal number
       representing the bit pattern for the new mode bits.

       The format of a symbolic mode is  [ugoa...][[-+=][perms...]...],  where
       perms  is  either zero or more letters from the set rwxXst, or a single
       letter from the set ugo.  Multiple symbolic modes can be  given,  sepa‚Äê
       rated by commas.


       Each MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.

       -R, --recursive
              change files and directories recursively

SEE ALSO
       chmod(2)

       Full documentation at: <https://www.gnu.org/software/coreutils/chmod>
       or available locally via: info '(coreutils) chmod invocation'