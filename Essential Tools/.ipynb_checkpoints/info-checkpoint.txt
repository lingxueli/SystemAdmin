Basic Info command keys

l           Close this help window.
q           Quit Info altogether.
h           Invoke the Info tutorial. ->


Next: Stand-alone Info,  Up: (dir)

Stand-alone GNU Info
********************

This documentation describes the stand-alone Info reader which you can
use to read Info documentation.

   If you are new to the Info reader, then you can get started by typing
'H' for a list of basic key bindings.  You can read through the rest of
this manual by typing <SPC> and <DEL> (or <Space> and <Backspace>) to
move forwards and backwards in it.

* Menu:

* Stand-alone Info::            What is Info?
* Invoking Info::               Options you can pass on the command line.
* Cursor Commands::             Commands which move the cursor within a node.  -> 3
* Scrolling Commands::          Commands for reading the text within a node.
* Node Commands::               Commands for selecting a new node.
* Searching Commands::          Commands for searching an Info file.
* Index Commands::              Commands for looking up in indices.
* Xref Commands::               Commands for selecting cross-references.
* Window Commands::             Commands which manipulate multiple windows.
* Printing Nodes::              How to print out the contents of a node.
* Miscellaneous Commands::      A few commands that defy categorization.
* Variables::                   How to change the default behavior of Info.
* Colors and Styles::           Customize the colors used by Info.
* Custom Key Bindings::         How to define your own key-to-command bindings.
* Index::                       Global index.

3 Moving the Cursor
*******************

GNU Info has several commands which allow you to move the cursor about
the screen.  The notation used in this manual to describe keystrokes is
the same as the notation used within the Emacs manual (*note (emacs)User
Input::).  'C-X' means press the 'CTRL' key and the key X.  'M-X' means
press the 'META' key and the key X.  On many terminals the 'META' key is
known as the 'ALT' key.  'SPC' is the space bar.  The other keys are
usually called by the names imprinted on them.


'C-n' ('next-line')   -> down arrow
<DOWN> (an arrow key)
     Move the cursor down to the next line.

'C-p' ('prev-line')   -> up arrow
<UP> (an arrow key)
     Move the cursor up to the previous line.

...

'M-<' ('beginning-of-node')
'C-<Home>' (on DOS/Windows only)
'b'
     Move the cursor to the start of the current node.

'M->' ('end-of-node')
'C-<End>' (on DOS/Windows only)
'e'
     Move the cursor to the end of the current node.



4 Moving Text Within a Window
*****************************

Sometimes you are looking at a screenful of text, and only part of the
current paragraph you are reading is visible on the screen.  The
commands detailed in this section are used to shift which part of the
current node is visible on the screen.


<SPC> ('scroll-forward')     -> page down

<NEXT>                       -> page down
     Shift the text in this window up.  That is, show more of the node
     which is currently below the bottom of the window.  
     
     The <NEXT> key is known as the <PageDown> key on some keyboards.


'C-v' ('scroll-forward-page-only')  -> page up, but remain in the same node
     Shift the text in this window up.  This is identical to the <SPC>
     operation above, except that it never scrolls beyond the end of the
     current node.


   The 'scroll-forward-page-only' and 'scroll-backward-page-only'
commands never scroll beyond the current node.


<DEL> ('scroll-backward')   -> page up

<PREVIOUS>                   -> page up
     Shift the text in this window down.  The inverse of
     'scroll-forward'.  If you are at the start of a node, <DEL> takes
     you to the "previous" node, so that you can read an entire manual
     from finish to start by repeating <DEL>.
     
     The <PREVIOUS> key is the <PageUp> key on many keyboards.  Emacs
     refers to it by the name <PRIOR>.

'M-v' ('scroll-backward-page-only')              -> page up, but remain in the same node
     Shift the text in this window down.  The inverse of
     'scroll-forward-page-only'.  Does not scroll beyond the start of
     the current node.  The default scroll size can be changed by
     invoking the 'scroll-backward-page-only-set-window' command with a
     numeric argument.


5 Selecting a Node
******************

This section details the numerous Info commands which select a new node
to view in the current window.

   The most basic node commands are 'n', 'p', 'u', and 'l'.

   When you are viewing a node, the top line of the node contains some
Info "pointers" which describe where the next, previous, and up nodes
are.  Info uses this line to move about the node structure of the file
when you use the following commands:

'n' ('next-node')

'p' ('prev-node')

'u' ('up-node')      -> switch to the menu

You can easily select a node that you have already viewed in this
window by using the 'l' command--this name stands for "last", and
actually moves backwards through the history of visited nodes for this
window.  This is handy when you followed a reference to another node,
possibly to read about a related issue, and would like then to resume
reading at the same place where you started the excursion.

   Each node where you press 'l' is discarded from the history.  Thus,
by the time you get to the first node you visited in a window, the
entire history of that window is discarded.

'l' ('history-node')      -> go back to the previously visited node


6 Searching an Info File
************************

GNU Info allows you to search for a sequence of characters throughout an
entire Info file.  Here are the commands to do this:

's' ('search')

'/'
     Read a string in the echo area and search for it, either as a
     regular expression (by default) or a literal string.  If the string
     includes upper-case characters, the Info file is searched
     case-sensitively; otherwise Info ignores the letter case.  With a
     numeric argument of N, search for Nth occurrence of the string.
     Negative arguments search backwards.


'?' ('search-backward')
     Read a string in the echo area and search backward through the Info
     file for that string.  If the string includes upper-case
     characters, the Info file is searched case-sensitively; otherwise
     Info ignores the letter case.  With a numeric argument of N, search
     for Nth occurrence of the string.  Negative arguments search
     forward.

'C-x n' ('search-next')      -> after entering the search pattern, move the cursor forward to the next occurence
'}'
     Search forwards for the string used for the last search command.
     Case sensitivity and use of regular expressions are kept the same.
     With a numeric argument of N, search for Nth next occurrence.

     By default, the search starts at the position immediately following
     the cursor.  However, if the variable 'search-skip-screen' (*note
     'search-skip-screen': Variables.) is set, it starts at the
     beginning of the next page, thereby skipping all visibly displayed
     lines.

'C-x N' ('search-previous')   -> -> after entering the search pattern, move the cursor backward to the previous occurence
'{'
     Just like 'search-next', but in reverse.  You can use 'search-next'
     and 'search-previous' together to move forward and backward through
     matches.  'search-previous' usually goes to the place in the file
     that was displayed before an immediately preceding 'search-next',
     and vice versa.(1)