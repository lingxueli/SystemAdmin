~/.ssh/authorized_keys: Holds a list of authorized public keys for servers. When the client connects to a server, the server authenticates the client by checking its signed public key stored within this file

~/.ssh/known_hosts: Contains DSA host keys of SSH servers accessed by the user. This file is very important for ensuring that the SSH client is connecting the correct SSH server.



The known_hosts file lets the client authenticate the server, to check that it isn't connecting to an impersonator. 
The authorized_keys file lets the server authenticate the user.


Client side confirms the server:

How is the authentication done?

One of the first things that happens when the SSH connection is being established is that the server sends its public key to the client, and proves (thanks to public-key cryptography) to the client that it knows the associated private key. This authenticates the server: if this part of the protocol is successful, the client knows that the server is who it claims it is.

=> server send the public key back to client. if it matches with its private key, client authenticates the server

Hwo to validate before the authentication?

SSH provides only a simple mechanism to verify the server's legitimacy: it remembers servers you've already connected to, in the ~/.ssh/known_hosts file on the client machine (there's also a system-wide file /etc/ssh/known_hosts)

=> Client stores a list of servers that it trusts

~/.ssh/known_hosts
/etc/ssh/known_hosts

Authenticating the server has to be done before you send any confidential data to it. In particular, if the user authentication involves a password, the password must not be sent to an unauthenticated server.

=> client authenticates the server first
Server authenticates the client second