Systemd is used to start stuff(unit), such as service, socket, mount, target.

To see a list of units, systemctl -t help

There're three types of unit files:
	/usr/lib/systemd/system 	default unit files installed from RPM packages. Never edit these files directly.
	/usr/lib: shell scripts for executables (library) in the user space 
	it doesn't make sense to put it here but okay...

	/etc/systemd/system 		custom unit files. Writtend by an admin or generated by systemctl edit
	/etc: core config file
	
	/run/systemd/System 		automatically generated unit files
	/run: Run-time variable data. Information about the running system since last boot. such as currently logged-in users and running daemons

	if a unit file exists in more than one locations, precedence is  run-time > custom config > default config

----------------------------------------------------
Systemd Service Unit
	It's used to start process, any type of process, including daemon and shell jobs(interactive process).

	example: vsftpd.service

	[Unit]			describe unit: description. it can define dependencies: after/before.
	[Service]		define how service should be started and stopped. ExecStart: how to start. type=forking(daemon process) type=oneshot(any command) see for detail man 5 systemd.service
	[Install]		define the target that needs this service to start. 
    
----------------------------------------------------
Systemd Mount unit
	
	Specify how a file system can be mounted on a directory.

	example: tmp.mount

	[Unit]
	[Mount]
    
----------------------------------------------------
Systemd Socket unit

	Socket or port is the method application communicates to one another. The Socket unit defines on which port Systemd wil be listening for incoming connections.

	A service doesn't have to run continuously, but instead it starts only if a connection is coming in on the socket.

	Every socket needs a corresponding service file.

	example: cockpit.socket (requires cockpit.service)

	[Unit]
	[Socket]
	[Install]
    
----------------------------------------------------
Systemd Target Unit

	Target unit could be used to load unit files(functionality) in the right order. You can define which services and target this target file requires and which it cannot coexist with.

	Target could have dependencies for other target. Example: basic.target. This target defines all the units should always be started. Run systemctl list-dependencies for dependencies that basic.target has.

	Target unit could be a group of units.

	Target unit could be a groupd of services, that used to serve a functionality. example printer.target defines all the units to provide printing functionality. This way you can easily start or stop all the units for printing function.

	Target unit could be used to define the state a server should be started in.

	example: multi-user.target

	[Unit]
	[Install]
    
	Relation between install in .service and install in .target
	
	[install] in target doesn't contain service info
	[install] in service contains target info

	example: when "systemctl enable servicename" is triggered, the service will be launched during booting, the install section from the service tells the system which target this service to be added to. 

		"Add unit(service) to target":
			a symbolic link is created at /ect/systemd/system

			systemctl enable vsftpd?

			then vsftpd will be started at boot time.

			symbolic link created: /ect/systemd/system/multi-user.target/wants/vsftpd.service

			which points to /unit/lib/systemd/system/vsftpd.service

			service + target will be automatically started?

			Terminology in systemd: multi-user.target "wants" the service.
  
----------------------------------------------------
