# cdrom is the kernel module, used by another module: sr_mod

[root@localhost ~]# lsmod | grep cdrom
cdrom                  65536  1 sr_mod
[root@localhost ~]# lsmod | head
Module                  Size  Used by
vfat                   20480  0

# because it's in used by another module
[root@localhost ~]# modprobe -r cdrom
modprobe: FATAL: Module cdrom is in use.
[root@localhost ~]# modprobe -r sr_mod
modprobe: FATAL: Module sr_mod is in use.


[root@localhost ~]# lsmod | grep sr
sr_mod                 28672  1



[root@localhost ~]# modprobe -r sr_mod; modprobe -r cdrom
modprobe: FATAL: Module sr_mod is in use.
modprobe: FATAL: Module cdrom is in use.

# it fails because there's optical device currently mounted

# optical device name starts with "sr" or "scd"
# CDROM driver (sr or scd)
CDROM and DVD drives (and WORM devices) are accessible via the sr upper level device driver. While "sr" is the device driver name, "sr_mod" is its module name. The device file name is either /dev/sr<n> or /dev/scd<n>.

# umount the optical device

[root@localhost ~]# cd /dev
[root@localhost dev]# ls -al | grep sr0 
lrwxrwxrwx.  1 root root           3 Sep 28 21:07 cdrom -> sr0
brw-rw----+  1 root cdrom    11,   0 Sep 28 21:07 sr0

[root@localhost dev]# umount /dev/sr0

# unload the kernel module
[root@localhost dev]# modprobe -r sr_mod; modprobe -r cdrom


# check the loading parameters it supports
[root@localhost dev]# modinfo cdrom
filename:       /lib/modules/4.18.0-193.el8.x86_64/kernel/drivers/cdrom/cdrom.ko.xz
license:        GPL
rhelversion:    8.2
srcversion:     E5A2049F635B552113240F5
depends:        
intree:         Y
name:           cdrom
vermagic:       4.18.0-193.el8.x86_64 SMP mod_unload modversions 
sig_id:         PKCS#7
signer:         CentOS Linux kernel signing key
sig_key:        0F:9B:11:63:4F:D7:6A:FE:FC:95:25:93:39:ED:89:A1:C9:BA:3C:B2
sig_hashalgo:   sha256
parm:           debug:bool
parm:           autoclose:bool
parm:           autoeject:bool
parm:           lockdoor:bool
parm:           check_media_type:bool
parm:           mrw_format_restart:bool


MODINFO(8)                                        modinfo                                        MODINFO(8)

DESCRIPTION
       modinfo extracts information from the Linux Kernel modules given on the command line. If the module
       name is not a filename, then the /lib/modules/version directory is searched, as is also done by
       modprobe(8) when loading kernel modules.

       modinfo by default lists each attribute of the module in form fieldname : value, for easy reading.
       The filename is listed the same way (although it's not really an attribute).


# reload the module with parameter
[root@localhost ~]# modprobe cdrom debug=1


# find the log from ring buffer
# For CDROM unloading is written. Loading is not written there
[root@localhost ~]# dmesg | tail
[   18.103217] virbr0: port 1(virbr0-nic) entered listening state
[   18.365854] virbr0: port 1(virbr0-nic) entered disabled state
[   48.368220] Bluetooth: RFCOMM TTY layer initialized
[   48.368228] Bluetooth: RFCOMM socket layer initialized
[   48.368327] Bluetooth: RFCOMM ver 1.11
[   49.751203] fuse: init (API version 7.31)
[   55.339434] rfkill: input handler disabled
[   64.463585] ISO 9660 Extensions: Microsoft Joliet Level 3
[   64.499565] ISO 9660 Extensions: RRIP_1991A
[ 1874.909105] cdrom: Uniform CD-ROM driver unloaded

# load the module automatically while taking in these parameters
# it's defined in /etc/modprobe.d/*.conf

MODPROBE(8)                                       modprobe                                      MODPROBE(8)

NAME
       modprobe - Add and remove modules from the Linux Kernel

SYNOPSIS
       modprobe [-v] [-V] [-C config-file] [-n] [-i] [-q] [-b] [modulename] [module parameters...]

DESCRIPTION
       modprobe intelligently adds or removes a module from the Linux kernel: note that for convenience,
       there is no difference between _ and - in module names (automatic underscore conversion is
       performed).  modprobe looks in the module directory /lib/modules/`uname -r` for all the modules and
       other files, except for the optional configuration files in the /etc/modprobe.d directory (see
       modprobe.d(5))

MODPROBE.D(5)                                    modprobe.d                                   MODPROBE.D(5)

NAME
       modprobe.d - Configuration directory for modprobe

SYNOPSIS
       /lib/modprobe.d/*.conf

       /etc/modprobe.d/*.conf

       /run/modprobe.d/*.conf

DESCRIPTION
       Because the modprobe command can add or remove more than one module, due to modules having
       dependencies, we need a method of specifying what options are to be used with those modules. All
       files underneath the /etc/modprobe.d directory which end with the .conf extension specify those
       options as required.
       
       The format of and files under modprobe.d is simple: one command per line, with blank lines and lines
       starting with '#' ignored (useful for adding comments). A '\' at the end of a line causes it to
       continue on the next line, which makes the file a bit neater.

COMMANDS       
       options modulename option...
           This command allows you to add options to the module modulename (which might be an alias) every
           time it is inserted into the kernel: whether directly (using modprobe modulename) or because the
           module being inserted depends on this module.



[root@localhost ~]# man -k modprobe
modprobe (8)         - Add and remove modules from the Linux Kernel
modprobe.conf (5)    - Configuration directory for modprobe
modprobe.d (5)       - Configuration directory for modprobe

[root@localhost ~]# cd /etc/modprobe.d/
[root@localhost modprobe.d]# ls
firewalld-sysctls.conf  kvm.conf  lockd.conf  mlx4.conf  nvdimm-security.conf  truescale.conf  tuned.conf  vhost.conf
[root@localhost modprobe.d]# vi cdrom.conf
[root@localhost modprobe.d]# cat cdrom.conf 
options cdrom debug=1