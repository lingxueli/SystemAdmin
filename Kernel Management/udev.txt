# a kernel module serves a specific functionality, such as loading drivers, file system support

# udev is a device manager for the Linux kernel. udev primarily manages device nodes in the /dev directory

# Udev is the Linux subsystem that supplies your computer with device events. In plain English, that means it's the code that detects when you have things plugged into your computer, like a network card, external hard drives (including USB thumb drives), mouses, keyboards, joysticks and gamepads, DVD-ROM drives, and so on. That makes it a potentially useful utility, and it's well-enough exposed that a standard user can manually script it to do things like performing certain tasks when a certain hard drive is plugged in.





[root@localhost ~]# man -k udev
dracut-pre-trigger.service (8) - runs the dracut hooks before udevd is triggered
dracut-pre-udev.service (8) - runs the dracut hooks before udevd is started
systemd-udevd (8)    - Device event managing daemon
systemd-udevd-control.socket (8) - Device event managing daemon
systemd-udevd-kernel.socket (8) - Device event managing daemon
systemd-udevd.service (8) - Device event managing daemon
udev (7)             - Dynamic device management
udev.conf (5)        - Configuration for device event managing daemon
udevadm (8)          - udev management tool




SYSTEMD-UDEVD.SERVICE(8)                                       systemd-udevd.service                                      SYSTEMD-UDEVD.SERVICE(8)

NAME
       systemd-udevd.service, systemd-udevd-control.socket, systemd-udevd-kernel.socket, systemd-udevd - Device event managing daemon

SYNOPSIS
       systemd-udevd.service

       systemd-udevd-control.socket

       systemd-udevd-kernel.socket

       /usr/lib/systemd/systemd-udevd [--daemon] [--debug] [--children-max=] [--exec-delay=] [--event-timeout=] [--resolve-names=early|late|never]
                                      [--version] [--help]

DESCRIPTION
       systemd-udevd listens to kernel uevents. For every event, systemd-udevd executes matching instructions specified in udev rules. See
       udev(7).

       The behavior of the daemon can be configured using udev.conf(5), its command line options, environment variables, and on the kernel command
       line, or changed dynamically with udevadm control.


# rule files

UDEV(7)                                             udev                                            UDEV(7)

NAME
       udev - Dynamic device management

DESCRIPTION
       udev supplies the system software with device events, manages permissions of device nodes and may
       create additional symlinks in the /dev directory, or renames network interfaces. The kernel usually
       just assigns unpredictable device names based on the order of discovery. Meaningful symlinks or
       network device names provide a way to reliably identify devices based on their properties or current
       configuration.

       The udev daemon, systemd-udevd.service(8), receives device uevents directly from the kernel whenever
       a device is added or removed from the system, or it changes its state. When udev receives a device
       event, it matches its configured set of rules against various device attributes to identify the
       device. Rules that match may provide additional device information to be stored in the udev database
       or to be used to create meaningful symlink names.

       All device information udev processes is stored in the udev database and sent out to possible event
       subscribers. Access to all stored data and the event sources is provided by the library libudev.

RULES FILES
       The udev rules are read from the files located in the system rules directory /usr/lib/udev/rules.d,
       the volatile runtime directory /run/udev/rules.d and the local administration directory
       /etc/udev/rules.d. All rules files are collectively sorted and processed in lexical order,
       regardless of the directories in which they live. However, files with identical filenames replace
       each other. Files in /etc have the highest priority, files in /run take precedence over files with
       the same name in /usr/lib. This can be used to override a system-supplied rules file with a local
       file if needed; a symlink in /etc with the same name as a rules file in /usr/lib, pointing to
       /dev/null, disables the rules file entirely. Rule files must have the extension .rules; other
       extensions are ignored.


# systemd-udevd listens to kernel events
# it loads the driver to make the hardware available
# it reads rule files which could be system rules files and the custom rules


# tools to manage udevd

$ man udevadm
UDEVADM(8)                                                            udevadm                                                           UDEVADM(8)

NAME
       udevadm - udev management tool

SYNOPSIS
       udevadm [--debug] [--version] [--help]

       udevadm info options

       udevadm trigger [options]

       udevadm settle [options]

       udevadm control command

       udevadm monitor [options]

       udevadm test [options] devpath

       udevadm test-builtin [options] command devpath

DESCRIPTION
       udevadm expects a command and command specific options. It controls the runtime behavior of systemd-udevd, requests kernel events, manages
       the event queue, and provides simple debugging mechanisms.

   udevadm monitor [options]
       Listens to the kernel uevents and events sent out by a udev rule and prints the devpath of the event to the console. It can be used to
       analyze the event timing, by comparing the timestamps of the kernel uevent and the udev event.


[root@localhost ~]# man -k udev
dracut-pre-trigger.service (8) - runs the dracut hooks before udevd is triggered
dracut-pre-udev.service (8) - runs the dracut hooks before udevd is started
systemd-udevd (8)    - Device event managing daemon
systemd-udevd-control.socket (8) - Device event managing daemon
systemd-udevd-kernel.socket (8) - Device event managing daemon
systemd-udevd.service (8) - Device event managing daemon
udev (7)             - Dynamic device management
udev.conf (5)        - Configuration for device event managing daemon
udevadm (8)          - udev management tool


# probes hardware
# e.g when a USB drive is plugged in 
[root@localhost ~]# udevadm monitor
monitor will print the received events for:
UDEV - the event which udev sends out after rule processing
KERNEL - the kernel uevent

KERNEL[61976.004235] add      /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1 (usb)
KERNEL[61976.004318] add      /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1/1-1:1.0 (usb)
KERNEL[61976.004391] bind     /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1 (usb)
UDEV  [61976.144584] add      /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1 (usb)
KERNEL[61976.210818] add      /module/usb_storage (module)
KERNEL[61976.211011] add      /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1/1-1:1.0/host3 (scsi)
KERNEL[61976.211100] add      /devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-1/1-1:1.0/host3/scsi_host/host3 (scsi_host)

