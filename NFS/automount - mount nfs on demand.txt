autoFS(auto file system) service: mount the device upon an attempt to access it.

$ yum whatprovides */autofs
autofs-1:5.1.4-43.el8.x86_64 : A tool for automatically mounting and unmounting filesystems

$ yum whatprovides */automount
autofs-1:5.1.4-43.el8.x86_64 : A tool for automatically mounting and unmounting filesystems


$ yum install -y autofs

[root@localhost ~]# man -k autofs
auto.master (5)      - Master Map for automounter consulted by autofs
autofs (5)           - Format of the automounter maps
autofs (8)           - Service control for the automounter
autofs.conf (5)      - autofs configuration
autofs_ldap_auth.conf (5) - autofs LDAP authentication configuration
automount (8)        - manage autofs mount points


# how to configure automount for NFS

1. master file /etc/auto.master defines the mapper file
2. secondary mapper file as directed by the master file defines mount

1. direct map

$ mkdir /autodir

# define mapper
$ vi /ect/auto.master
/- /ect/auto.master.d/auto.dir

# mount point: /-  
# mapper file: /ect/auto.master.d/auto.dir

# specify mount detailes in the mapper file
$ vi /ect/auto.master.d/auto.dir
/autodir server20:/common

# mount point: /autodir
# NFS path: server20:/common

# start autoFS service
$ systemctl enable --now autofs
$ systemctl status autofs

# test, command such as ls, cd in the mount point will activate the automount
$ ls /autodir
$ mount | grep autodir


2. indirect map - the local path in the mapper is not root

# define mapper
$ vi /etc/auto.master
/misc   /etc/auto.misc

# specify mount detailes in the mapper file
$ vi /etc/auto.misc
autoindir   server20:/common

# start autoFS service
$ systemctl enable --now autofs
$ systemctl status autofs

# test, command such as ls, cd in the mount point will activate the automount
$ ls /misc/autoindir
$ mount | grep autoindir


3. wildcard

# define mapper
$ vi /etc/auto.master
/nfshome   /etc/auto.master.d/auto.home

# specify mount detailes in the mapper file
$ vi /etc/auto.misc
*   -rw   server20:/home/&

Anything under server20:/home will be mounted under local path /nfshome
*: local path, anything
&: the matching item in the remote server







AUTO.MASTER(5)                          File Formats Manual                         AUTO.MASTER(5)

NAME
       auto.master - Master Map for automounter consulted by autofs

DESCRIPTION
       The  auto.master  map  is  consulted  to  set  up  automount  managed mount points when the
       autofs(8) script is invoked or the automount(8) program is run. Each line describes a mount
       point  and  refers  to  an autofs map describing file systems to be mounted under the mount
       point.

       The default location of the master map is /etc/auto.master but an  alternate  name  may  be..
       
       The format of a master map entry is:

       mount-point [map-type[,format]:]map [options]

       mount-point
              Base location for the autofs filesystem to be  mounted.   For  indirect
              maps  this  directory will be created (as with mkdir -p) and is removed
              when the autofs filesystem is umounted.


       map-type
              Type of map used for this mount point.  The  following  are  valid  map
              types:

              file   The map is a regular text file.

       format
              Format of the map data; currently the formats recognized are sun, which
              is  a  subset  of  the  Sun  automounter map format, hesiod, for hesiod
              filesys entries and amd for amd formated map entries.  If the format is
              left  unspecified,  it  defaults to sun for all map types except hesiod
              unless it is a top level amd mount that has a configuration  entry  for
              the mount point path, in which case the format used is amd.

       map
              Name  of the map to use.  This is an absolute UNIX pathname for maps of
              types file, dir, or program, and the name of a database in the case for
              maps of type yp, nisplus, or hesiod or the dn of an LDAP entry for maps
              of type ldap.

EXAMPLE
         /-        auto.data
         /home     /etc/auto.home
         /mnt      yp:mnt.map

       This will generate two mountpoints for /home and /mnt and install direct mount triggers for
       each entry in the direct mount map auto.data.  All accesses to /home will lead to the  con‐
       sultation  of  the  map in /etc/auto.home and all accesses to /mnt will consult the NIS map
       mnt.map.  All accesses to paths in the map auto.data will trigger mounts when they are  ac‐
       cessed  and  the Name Service Switch configuration will be used to locate the source of the
       map auto.data.
       
       
       For direct maps the mount point is always specified as:

       /-

       and  the key used within the direct map is the full path to the mount point. The direct map
       may have multiple entries in the master map.

       For indirect maps access is by using the path scheme:

       /mount-point/key

       where mount-point is one of the entries listed in the master map. The key is a  single  di‐
       rectory  component  and  is matched against entries in the map given in the entry (See aut‐
       ofs(5)).
       
       The format of a master map entry is:

       mount-point [map-type[,format]:]map [options]

       mount-point
              Base location for the autofs filesystem to be mounted.  For indirect maps  this  di‐
              rectory will be created (as with mkdir -p) and is removed when the autofs filesystem
              is umounted.

       map-type
              Type of map used for this mount point.  The following are valid map types:

              file   The map is a regular text file.

       map
              Name  of  the map to use.  This is an absolute UNIX pathname for maps of types file,
              dir, or program, and the name of a database in the case for maps of  type  yp,  nis‐
              plus, or hesiod or the dn of an LDAP entry for maps of type ldap.

[root@localhost ~]# man -k automount
auto.master (5)      - Master Map for automounter consulted by autofs
autofs (5)           - Format of the automounter maps

AUTOFS(5)                        File Formats Manual                        AUTOFS(5)

NAME
       autofs - Format of the automounter maps

DESCRIPTION
       The  automounter  maps are FILE, NIS, NISPLUS or LDAP (including LDAP via SSS)
       referred to by the master map of the automounter (see auto.master(5)).   These
       maps  describe how file systems below the mount point of the map (given in the
       master map) are to be mounted.  This page describes the  sun  map  format;  if
       another map format, other than amd , is specified (e.g. hesiod), this documen‐
       tation does not apply.

       Indirect maps, except for the internal hosts map, can be changed  on  the  fly
       and  the automouter will recognize those changes on the next operation it per‐
       forms on that map. Direct maps require a HUP signal be sent to the  daemon  to
       refresh their contents as does the master map.

SUN FORMAT
       This  is  a  description of the text file format.  Other methods of specifying
       these files may exist.  All empty lines or lines beginning with # are ignored.
       The basic format of one line in such maps is:
       key [-options] location

       key
              For indirect mounts this is the part of the path name between the mount
              point and the path into the filesystem when it is mounted. Usually  you
              can  think  about the key as a sub-directory name below the autofs man‐
              aged mount point.

              For direct mounts this is the full path of each mount point.  This  map
              is always associated with the /- mount point in the master map.

       options
              Zero  or  more  options may be given.  Options can also be given in the
              auto.master file in which case both values are cumulative  (this  is  a
              difference  from  SunOS).   The  options  are a list of comma separated
              options as customary for the mount(8) command.

              There are several special options..

              -fstype=
                     is used to specify a filesystem type if the filesystem is not of
                     the  default  NFS  type.   This option is processed by the auto‐
                     mounter and not by the mount command.

              -strict
                     is used to treat errors when mounting  file  systems  as  fatal.
                     This  is  important when multiple file systems should be mounted
                     (`multi-mounts'). If this option is given,  no  file  system  is
                     mounted at all if at least one file system can't be mounted.

              -use-weight-only
                     is used to make the weight the sole factor in selecting a server
                     when multiple servers are present in a map entry.  and

              -no-use-weight-only
                     can be used to negate the option if it is present in the  master
                     map entry for the map but is not wanted for the given mount.


       location
              The location specifies from where the file system is to be mounted.  In
              the most cases this will be  an  NFS  volume  and  the  usual  notation
              host:pathname  is used to indicate the remote filesystem and path to be
              mounted.  If the filesystem to be mounted begins  with  a  /  (such  as
              local  /dev  entries  or  smbfs  shares) a : needs to be prefixed (e.g.
              :/dev/sda1).

EXAMPLE
       Indirect map:

         kernel    -ro,soft,intr       ftp.kernel.org:/pub/linux
         boot      -fstype=ext2        :/dev/hda1
         windoze   -fstype=smbfs       ://windoze/c
         removable -fstype=ext2        :/dev/hdd
         cd        -fstype=iso9660,ro  :/dev/hdc
         floppy    -fstype=auto        :/dev/fd0
         server    -rw,hard,intr       / -ro myserver.me.org:/ \
                                       /usr myserver.me.org:/usr \
                                       /home myserver.me.org:/home

       In the first line we have a NFS  remote  mount  of  the  kernel  directory  on
       ftp.kernel.org.   This  is  mounted read-only.  The second line mounts an ext2
       volume from a local ide drive.  The third makes a share exported from  a  Win‐
       dows  machine  available  for  automounting.   The rest should be fairly self-
       explanatory. The last entry (the last three lines) is an example of  a  multi-
       map (see below).

       If  you  use the automounter for a filesystem without access permissions (like
       vfat), users usually can't write on such a filesystem because it is mounted as
       user  root.   You can solve this problem by passing the option gid=<gid>, e.g.
       gid=floppy. The filesystem is then mounted as group floppy  instead  of  root.
       Then  you  can add the users to this group, and they can write to the filesys‐
       tem. Here's an example entry for an autofs map:

         floppy-vfat  -fstype=vfat,sync,gid=floppy,umask=002  :/dev/fd0

       Direct map:

         /nfs/apps/mozilla             bogus:/usr/local/moxill
         /nfs/data/budgets             tiger:/usr/local/budgets
         /tst/sbin                     bogus:/usr/sbin


EXAMPLE
       Example NFS mount map:

       Assuming we have the autofs master map entry:

         /test     file,amd:/etc/amd.test

       And the following map in /etc/amd.test:

         /defaults type:=nfs;rhost:=bilbo
         apps      rfs:=/autofs
         util      rhost:=zeus;rfs:=/work/util
         local     rfs:=/shared;sublink:=local

       In  the first line we have an NFS remote mount of the exported directory /aut‐
       ofs from host bilbo which would be mounted on  /test/apps.  Next  another  nfs
       mount  for  the  exported  directory /work/util from host zeus.  This would be
       mounted on /test/util.

       Finally we have an example of the use of the sublink option. In this case  the
       filesystem  bilbo:/shared  would  be  mounted on a path external the automount
       directory (under the direcory given by configuration option auto_dir) and  the
       path  /test/local  either  symlinked or bind mounted (depending on the setting
       autofs_use_lofs) to the "local" subdirectory of the external mount.

SEE ALSO
       automount(8),   auto.master(5),   autofs(8),  autofs.conf(5),  mount(8),  aut‐
       ofs_ldap_auth.conf(5).
       
       
       
$ umount -a -t autofs

This will umount every autofs mount.

       -t, --types type...
              Indicate that the actions should only be taken on  filesystems  of  the
              specified  type.   More than one type may be specified in a comma-sepa‐
              rated list.  The list of filesystem types can be prefixed  with  no  to
              indicate that no action should be taken for all of the mentioned types.
               Note that umount reads information about mounted filesystems from ker‐
              nel  (/proc/mounts) and filesystem names may be different than filesys‐
              tem names used in the /etc/fstab (e.g. "nfs4" vs. "nfs").

       -a, --all
              All of the filesystems described in /proc/self/mountinfo (or in  depre‐
              cated  /etc/mtab) are unmounted, except the proc, devfs, devpts, sysfs,
              rpc_pipefs and nfsd filesystems. This list of the  filesystems  may  be
              replaced by --types umount option.