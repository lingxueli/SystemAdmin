Switch between background and foreground:

	& (in the end)		Bring to the background
	fg (job id)		Bring to the foreground
	jobs		Find job id
	bg (job id)		Bring to the backgroud
	nohup		no longer needed in RHEL 8

	Ctrl - Z 	When the process takes too long, use it to pause the process in the foreground, later bring it to the background by bg.
	Ctrl - C 	Cancel the process
	Ctrl - D	Send End Of File(EOF) char, the proces stops waiting for further input 

	top		type k 		 to kill the process from top command

---------------------------------------------------------------------------------------
Process management
	ps 			shows process started by current user
	ps aux		shows summary of active process
	ps -ef 		shows the command that start the process, while ps aux shows only the name of the process
	ps fax 		shows hierarchical relationship between parent and child process

	ps fax | grep -B5 dd	to observe the matching line and 5(or any) lines before that, in order to get the parent process

	in ps command, some option use hypen some do not. Because in history it comes from different system flavor.
    
    PID is the important part from ps output
	ps aux | grep dd	You can the PID process whose names contains dd
	pgrep dd	it does the same thing

---------------------------------------------------------------------------------------
Adjust niceness/priority

	nice	start a process with a niceness value
	nice -n 5 dd  if=/dev/zero of=/dev/null &
			start dd command with niceness = 5 (lower priority)

	renice	adjust the niceness of active process
	ps aux | grep dd 	get the PID for renice, PID = 1234
	renice -n 10 -p 1234	renice for PID 1234
		
	top		type r 		change the niceness as well
    
---------------------------------------------------------------------------------------
Signals

	man 7 signals	available signals could be sent to the process

	SIGTERM 15		stop
	SIGKILL	9	force to stop
	SIGHUP 1		hang up. The process will reread the configuration file. 
					Use it after making modificaitons to a process configuration file.

	kill			send singal to the process

	kill PID		defaul is stop SIGTERM 15
					The process will cease activities and close open files. Sometimes process ignores it. That's why to use force stop.
	kill -9	PID		force stop
					risk losing data
					system might become unstable if other processes depend on it

	kill -l 	show a list of available signals

	pkill name		kill by name instead of PID		
	killall	name	kill multiple processes using the same name

	killall is convinient in multiprocessing environment (not multithread). In multiprocessing environment, a server starts serveral commands all with the same name. Rather than kill each one by PID, use killall. It happens in multithread environment too but less common. e.g. you can start "dd if=/dev/zero of=/dev/null &"" three times 
    
---------------------------------------------------------------------------------------    
Use top to manage process

	top lists the most active processes

	from the output, it doesn't have nicecess/priority value. It has state value.

	States values
		R	runnning	either running in CPU, or in the queue waiting to get a slot in CPU
		S 	sleeping	waiting for an event to complete
		D 	uninterruptable sleep 		waiting for I/O, sleeping cannot be stopped
		T 	stopped 	this happens when you use Ctrl-Z (pause) sequence to an interactive shell process
		Z	Zombie		process has been stopped, but cannot be removed by its parent. Unmanageble.

	top can do the job of kill and renice

	top 	type k 		send signal to the process. Select PID and signal id. Default PID is the first process. Default signal is 15 SIGTERM (ask to stop, not force to stop).
	top 	type r 		renice process. Select PID and niceness value.