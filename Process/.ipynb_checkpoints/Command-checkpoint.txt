Switch between background and foreground:

Used by foregroud process
	& (in the end)		Bring to the background
	bg (job id)		Bring to the backgroud


	Ctrl - C 	Cancel the process
    Ctrl - Z 	pause the process in the foreground, so that later it can be run in the background.
	Ctrl - D	Send End Of File(EOF) char, the proces stops waiting for I/O 



Used by backgroud process
	fg (job id)		Bring to the foreground
    
Used by fg, bg
	jobs		Find job id


	top		type k 		 to kill the process from top command

---------------------------------------------------------------------------------------
Process management
	ps 			shows process started by current user
	ps aux		shows summary of active process
	ps -ef 		shows the command that start the process, while ps aux shows only the name of the process
	ps fax 		shows hierarchical relationship between parent and child process

	ps fax | grep -B5 dd	to observe the matching line and 5(or any) lines before that, in order to get the parent process
   
    PID is the important part from ps output
	ps aux | grep dd	You can the PID process whose names contains dd
	pgrep dd	it does the same thing

---------------------------------------------------------------------------------------
Adjust niceness/priority

	nice	start a process with a niceness value
	nice -n 5 dd  if=/dev/zero of=/dev/null &
			start dd command with niceness = 5 (lower priority)

	renice	adjust the niceness of active process
	ps aux | grep dd 	get the PID for renice, PID = 1234
	renice -n 10 -p 1234	renice for PID 1234
		
	top		type r 		change the niceness as well
    
---------------------------------------------------------------------------------------
Signals

	man 7 signals	available signals could be sent to the process

	SIGTERM 15		TERM signal, stop the process but sometime gets ignored; it's the default signal sent by kill command
    
	SIGKILL	9	KILL signal, force the process to stop
    
	SIGHUP 1		hang up. The process will reread the configuration file. 
					Use it after making modificaitons to a process configuration file.

	kill			send singal to the process

	kill PID		defaul is stop SIGTERM 15
	kill -9	PID		force stop

	kill -l 	show a list of available signals

	pkill name		kill by name instead of PID
	killall	name	kill multiple processes using the same name

	killall is convinient in multiprocessing environment (not multithread). In multiprocessing environment, a server starts serveral commands all with the same name. Rather than kill each one by PID, use killall.
    
---------------------------------------------------------------------------------------    
Use top to manage process

	top lists the most active processes

	from the output, it doesn't have nicecess/priority value. It has state value.

	States values

R	runnning	being served or waiting to be served

D 	blocked or uninterruptable sleep		waiting for I/O

S 	sleeping	waiting for an event to complete

T 	stopped 	this happens when you use Ctrl-Z (pause) sequence to an interactive shell process

Z	Zombie		process has been stopped, but cannot be removed by its parent. Unmanageble.

	top can do the job of kill and renice

	top 	type k 		send signal to the process. Select PID and signal id. Default PID is the first process. Default signal is 15 SIGTERM (ask to stop, not force to stop).
	top 	type r 		renice process. Select PID and niceness value.
---------------------------------------------------------------------------------------        
Load average

	number of processes in running(R) + blocked state(D), because they are the consumers of the CPU resources and they're or would be served earlier than other processes.

	It's represented on the top right corner of top, and also represented by uptime. Format: 1min 5min 15min

	Keep load average < number of CPU cores most of the time, otherwise you have performance issue. Use lscup to find out the number of CPU cores.
    
    lscpu displays the architecture of CPU such as number of CPUs and cores per CPU.
    
---------------------------------------------------------------------------------------
Tuned profile

	Use a profile can boost system performance based on your use case, such as desktop, virtual machine, KVM(Kernal based virtual machine, it's a hypervisor/virtual host), network performance, throughput performance, powersaving etc. 
    
    Install and start tuned service

	yum -y install tuned 			
	systemctl enable --now tuned 	start tuned profile
	systemctl status tuned 			check whether tuned is running


[root@localhost ~]# tuned
tuned      tuned-adm  

	tuned-adm	the interface to manage tuned deamon

	tuned-adm active					find which profile is currently selected
	tuned-adm list						list available profile
	tuned-adm profile profile-name		select the profile
	tuned-adm recommend 				see which profile is recommended