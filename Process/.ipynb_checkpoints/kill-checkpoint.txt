[root@localhost ~]# man -k signal
signal (2)           - ANSI C signal handling
signal (3p)          - signal management
signal (7)           - overview of signals


NAME
       signal - overview of signals

   Signal dispositions
       Each signal has a current disposition, which determines how the process behaves when it is delivered the signal.

       The entries in the "Action" column of the tables below specify the default disposition for each signal, as follows:

       Term   Default action is to terminate the process.

       Ign    Default action is to ignore the signal.

       Core   Default action is to terminate the process and dump core (see core(5)).

       Stop   Default action is to stop the process.

       Cont   Default action is to continue the process if it is currently stopped.
   Standard signals
       Linux supports the standard signals listed below.  Several signal numbers are architecture-dependent, as indicated in  the  "Value"
       column.   (Where  three values are given, the first one is usually valid for alpha and sparc, the middle one for x86, arm, and most
       other architectures, and the last one for mips.  (Values for parisc are not shown; see the Linux kernel source for signal numbering
       on that architecture.)  A dash (-) denotes that a signal is absent on the corresponding architecture.

       First the signals described in the original POSIX.1-1990 standard.

       Signal     Value     Action   Comment
       ──────────────────────────────────────────────────────────────────────
       SIGHUP        1       Term    Hangup detected on controlling terminal
                                     or death of controlling process
       SIGINT        2       Term    Interrupt from keyboard
       SIGQUIT       3       Core    Quit from keyboard
       SIGILL        4       Core    Illegal Instruction
       SIGABRT       6       Core    Abort signal from abort(3)
       SIGFPE        8       Core    Floating-point exception
       SIGKILL       9       Term    Kill signal
       SIGSEGV      11       Core    Invalid memory reference
       SIGPIPE      13       Term    Broken pipe: write to pipe with no
                                     readers; see pipe(7)
       SIGALRM      14       Term    Timer signal from alarm(2)
       SIGTERM      15       Term    Termination signal
       SIGUSR1   30,10,16    Term    User-defined signal 1
       SIGUSR2   31,12,17    Term    User-defined signal 2
       SIGCHLD   20,17,18    Ign     Child stopped or terminated
       SIGCONT   19,18,25    Cont    Continue if stopped
       SIGSTOP   17,19,23    Stop    Stop process
       SIGTSTP   18,20,24    Stop    Stop typed at terminal
       SIGTTIN   21,21,26    Stop    Terminal input for background process
       SIGTTOU   22,22,27    Stop    Terminal output for background process


       SIGHUP        1       Term    Hangup detected on controlling terminal
                                     or death of controlling process
       SIGKILL       9       Term    Kill signal                        => force process to stop   
       SIGTERM      15       Term    Termination signal         => default signal used in kill command: kill PID

KILL(1)                                                        User Commands                                                       KILL(1)

NAME
       kill - terminate a process

SYNOPSIS
       kill [-signal|-s signal|-p] [-q value] [-a] [--] pid|name...
       kill -l [number] | -L


       -l, --list [number]
              Print a list of signal names, or convert the given signal number to a name.  The signals can be found in /usr/include/linux/
              signal.h



[root@localhost ~]# kill -l
 1) SIGHUP	 2) SIGINT	 3) SIGQUIT	 4) SIGILL	 5) SIGTRAP
 6) SIGABRT	 7) SIGBUS	 8) SIGFPE	 9) SIGKILL	10) SIGUSR1
11) SIGSEGV	12) SIGUSR2	13) SIGPIPE	14) SIGALRM	15) SIGTERM
16) SIGSTKFLT	17) SIGCHLD	18) SIGCONT	19) SIGSTOP	20) SIGTSTP
21) SIGTTIN	22) SIGTTOU	23) SIGURG	24) SIGXCPU	25) SIGXFSZ
26) SIGVTALRM	27) SIGPROF	28) SIGWINCH	29) SIGIO	30) SIGPWR
31) SIGSYS	34) SIGRTMIN	35) SIGRTMIN+1	36) SIGRTMIN+2	37) SIGRTMIN+3
38) SIGRTMIN+4	39) SIGRTMIN+5	40) SIGRTMIN+6	41) SIGRTMIN+7	42) SIGRTMIN+8
43) SIGRTMIN+9	44) SIGRTMIN+10	45) SIGRTMIN+11	46) SIGRTMIN+12	47) SIGRTMIN+13
48) SIGRTMIN+14	49) SIGRTMIN+15	50) SIGRTMAX-14	51) SIGRTMAX-13	52) SIGRTMAX-12
53) SIGRTMAX-11	54) SIGRTMAX-10	55) SIGRTMAX-9	56) SIGRTMAX-8	57) SIGRTMAX-7
58) SIGRTMAX-6	59) SIGRTMAX-5	60) SIGRTMAX-4	61) SIGRTMAX-3	62) SIGRTMAX-2
63) SIGRTMAX-1	64) SIGRTMAX	



PGREP(1)                                                       User Commands                                                      PGREP(1)

NAME
       pgrep, pkill - look up or signal processes based on name and other attributes

SYNOPSIS
       pgrep [options] pattern
       pkill [options] pattern

DESCRIPTION
       pgrep  looks  through  the currently running processes and lists the process IDs which match the selection criteria to stdout.  All
       the criteria have to match.  For example,

              $ pgrep -u root sshd

       will only list the processes called sshd AND owned by root.  On the other hand,

              $ pgrep -u root,daemon

       will list the processes owned by root OR daemon.

       pkill will send the specified signal (by default SIGTERM) to each process instead of listing them on stdout.

       -u, --euid euid,...
              Only match processes whose effective user ID is listed.  Either the numerical or symbolical value may be used.




KILLALL(1)                                                     User Commands                                                    KILLALL(1)

NAME
       killall - kill processes by name

SYNOPSIS
       killall [-Z, --context pattern] [-e, --exact] [-g, --process-group] [-i, --interactive] [-n, --ns PID] [-o, --older-than TIME]
       [-q, --quiet] [-r, --regexp] [-s, --signal SIGNAL, -SIGNAL] [-u, --user user] [-v, --verbose] [-w, --wait] [-y, --younger-than
       TIME] [-I, --ignore-case] [-V, --version] [--] name ...
       killall -l
       killall -V, --version

DESCRIPTION
       killall sends a signal to all processes running any of the specified commands.  If no signal name is specified, SIGTERM is sent.

       Signals can be specified either by name (e.g.  -HUP or -SIGHUP) or by number (e.g.  -1) or by option -s.

       If  the  command name is not regular expression (option -r) and contains a slash (/), processes executing that particular file will
       be selected for killing, independent of their name.

       killall returns a zero return code if at least one process has been killed for each listed command, or no commands were listed  and
       at least one process matched the -u and -Z search criteria.  killall returns non-zero otherwise.

       A killall process never kills itself (but may kill other killall processes).

[root@localhost ~]# dd if=/dev/zero of=/dev/null &

[root@localhost ~]# ps aux | grep dd
root       67875 82.3  0.0   7328   916 pts/0    RN   14:59 329:58 dd if=/dev/zero of=/dev/null
root       74737 74.0  0.0   7328   924 pts/0    R    21:40   0:09 dd if=/dev/zero of=/dev/null
root       74744 70.3  0.0   7328   912 pts/0    R    21:40   0:07 dd if=/dev/zero of=/dev/null

[root@localhost ~]# renice -n 5 67875
67875 (process ID) old priority 10, new priority 5

[root@localhost ~]# ps fax | grep -B 5 dd
    PID TTY      STAT   TIME COMMAND
   3028 ?        Ssl    0:00  \_ /usr/libexec/gvfsd-metadata
   3038 ?        Rsl    2:13  \_ /usr/libexec/gnome-terminal-server
   3049 pts/0    Ss     0:00      \_ bash
   3088 pts/0    S      0:00          \_ su
   3103 pts/0    S      0:02              \_ bash
  67875 pts/0    RN   330:16                  \_ dd if=/dev/zero of=/dev/null
  74737 pts/0    R      1:36                  \_ dd if=/dev/zero of=/dev/null
  74744 pts/0    R      1:35                  \_ dd if=/dev/zero of=/dev/null
  74809 pts/0    R+     0:00                  \_ ps fax
  74810 pts/0    S+     0:00                  \_ grep --color=auto -B5 dd


[root@localhost ~]# kill -9 3103
Killed

# kill the parent process would move the child process up to become the child process of systemd.

[lisa@localhost ~]$ ps fax | grep -B 20 "dd if="
   3028 ?        Ssl    0:00  \_ /usr/libexec/gvfsd-metadata
   3038 ?        Ssl    2:19  \_ /usr/libexec/gnome-terminal-server
   3049 pts/0    Ss     0:00  |   \_ bash
  75194 pts/0    R+     0:00  |       \_ ps fax
  75195 pts/0    S+     0:00  |       \_ grep --color=auto -B 20 dd if=
  67875 pts/0    RN   331:34  \_ dd if=/dev/zero of=/dev/null
  74737 pts/0    R      5:31  \_ dd if=/dev/zero of=/dev/null
  74744 pts/0    R      5:26  \_ dd if=/dev/zero of=/dev/null
