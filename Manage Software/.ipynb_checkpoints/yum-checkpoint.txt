# list available repo for the packages
[root@localhost ~]# yum repolist
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

repo id                                       repo name
AppStream-exercise                            AppStream-exercise
BaseOS-exercise                               BaseOS-exercise
appstream                                     CentOS Linux 8 - AppStream
baseos                                        CentOS Linux 8 - BaseOS
extras                                        CentOS Linux 8 - Extras


   Repolist Command
       dnf [options] repolist [--enabled|--disabled|--all]
              Depending  on  the exact command lists enabled, disabled or all known repositories.
              Lists all enabled repositories by default. Provides more detailed information  when
              -v option is used.

       This  command by default does not force a sync of expired metadata. See also Metadata Syn‐
       chronization.

Available commands:
   Search Command
       dnf [options] search [--all] <keywords>...
              Search package metadata for keywords. Keywords are matched  as  case-insensitive  substrings,  globbing  is  supported.   By
              default  lists packages that match all requested keys (AND operation). Keys are searched in package names and summaries.  If
              the "--all" option is used, lists packages that match at least one of the keys (an OR operation).  In addition the keys  are
              searched in the package descriptions and URLs.  The result is sorted from the most relevant results to the least.

       This command by default does not force a sync of expired metadata. See also Metadata Synchronization.

#  it downloads the repo metadata and looks in the package name and description 
[root@localhost ~]# yum search user
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:09:18 ago on Sat 13 Feb 2021 08:03:45 PM MST.
======================================================== Name & Summary Matched: user ========================================================
gnome-user-docs.noarch : GNOME User Documentation
...
============================================================= Name Matched: user =============================================================
anaconda-user-help.noarch : Content for the Anaconda built-in help system
...
=========================================================== Summary Matched: user ============================================================
NetworkManager.x86_64 : Network connection manager and user applications
...

   Provides Command
       dnf [options] provides <provide-spec>
              Finds the packages providing the given <provide-spec>. This is useful when one knows a filename and wants to find what pack‐
              age (installed or not) provides this file.  The <provide-spec> is gradually looked for at following locations:

              1. The <provide-spec> is matched with all file provides of any available package:

                    $ dnf provides /usr/bin/gzip
                    gzip-1.9-9.fc29.x86_64 : The GNU data compression program
                    Matched from:
                    Filename    : /usr/bin/gzip

              2. Then all provides of all available packages are searched:

                    $ dnf provides "gzip(x86-64)"
                    gzip-1.9-9.fc29.x86_64 : The GNU data compression program
                    Matched from:
                    Provide     : gzip(x86-64) = 1.9-9.fc29

              3. DNF assumes that the <provide-spec> is a system command, prepends it with /usr/bin/, /usr/sbin/ prefixes (one at a  time)
                 and  does  the  file provides search again. For legacy reasons (packages that didn't do UsrMove) also /bin and /sbin pre‐
                 fixes are being searched:

                    $ dnf provides zless
                    gzip-1.9-9.fc29.x86_64 : The GNU data compression program
                    Matched from:
                    Filename    : /usr/bin/zless

              4. If this last step also fails, DNF returns "Error: No Matches found".

              This command by default does not force a sync of expired metadata. See also Metadata Synchronization.

# when specify the path name put */ in the front

[root@localhost ~]# yum provides semanage
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:00:21 ago on Sat 13 Feb 2021 08:03:45 PM MST.
policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : @System
Matched from:
Filename    : /usr/sbin/semanage

policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : baseos
Matched from:
Filename    : /usr/sbin/semanage

policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : BaseOS-exercise
Matched from:
Filename    : /usr/sbin/semanage


[root@localhost ~]# yum provides */semanage
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:00:02 ago on Sat 13 Feb 2021 08:03:45 PM MST.
policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : @System
Matched from:
Filename    : /usr/sbin/semanage
Filename    : /usr/share/bash-completion/completions/semanage

policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : baseos
Matched from:
Filename    : /usr/sbin/semanage
Filename    : /usr/share/bash-completion/completions/semanage

policycoreutils-python-utils-2.9-9.el8.noarch : SELinux policy core python utilities
Repo        : BaseOS-exercise
Matched from:
Filename    : /usr/sbin/semanage
Filename    : /usr/share/bash-completion/completions/semanage


   Info Command
       dnf [options] info [<package-file-spec>...]
              Lists description and summary information about installed and available packages.

       The info command limits the displayed packages the same way as the list command.

       This command by default does not force a sync of expired metadata. See also Metadata Synchronization.


[root@localhost ~]# yum info NetworkManager.x86_64        # or yum info NetworkManager
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:14:01 ago on Sat 13 Feb 2021 08:03:45 PM MST.
Installed Packages
Name         : NetworkManager
Epoch        : 1
Version      : 1.26.0
Release      : 8.el8
Architecture : x86_64
Size         : 6.6 M
Source       : NetworkManager-1.26.0-8.el8.src.rpm
Repository   : @System
From repo    : anaconda
Summary      : Network connection manager and user applications
URL          : http://www.gnome.org/projects/NetworkManager/
License      : GPLv2+ and LGPLv2+
Description  : NetworkManager is a system service that manages network interfaces and
             : connections based on user or automatic configuration. It supports
             : Ethernet, Bridge, Bond, VLAN, Team, InfiniBand, Wi-Fi, mobile broadband
             : (WWAN), PPPoE and other devices, and supports a variety of different VPN
             : services.

Available Packages
Name         : NetworkManager
Epoch        : 1
Version      : 1.26.0
Release      : 12.el8_3
Architecture : x86_64
Size         : 2.4 M
Source       : NetworkManager-1.26.0-12.el8_3.src.rpm
Repository   : baseos
Summary      : Network connection manager and user applications
URL          : http://www.gnome.org/projects/NetworkManager/
License      : GPLv2+ and LGPLv2+
Description  : NetworkManager is a system service that manages network interfaces and
             : connections based on user or automatic configuration. It supports
             : Ethernet, Bridge, Bond, VLAN, Team, InfiniBand, Wi-Fi, mobile broadband
             : (WWAN), PPPoE and other devices, and supports a variety of different VPN
             : services.


[root@localhost ~]# yum info nmap
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:11:15 ago on Sat 13 Feb 2021 08:03:45 PM MST.
Available Packages
Name         : nmap
Epoch        : 2
Version      : 7.70
Release      : 5.el8
Architecture : x86_64
Size         : 5.8 M
Source       : nmap-7.70-5.el8.src.rpm
Repository   : AppStream-exercise
Summary      : Network exploration tool and security scanner
URL          : http://nmap.org/
License      : Nmap
Description  : Nmap is a utility for network exploration or security auditing.  It supports
             : ping scanning (determine which hosts are up), many port scanning techniques
             : (determine what services the hosts are offering), and TCP/IP fingerprinting
             : (remote host operating system identification). Nmap also offers flexible target
             : and port specification, decoy scanning, determination of TCP sequence
             : predictability characteristics, reverse-identd scanning, and more. In addition
             : to the classic command-line nmap executable, the Nmap suite includes a flexible
             : data transfer, redirection, and debugging tool (netcat utility ncat), a utility
             : for comparing scan results (ndiff), and a packet generation and response
             : analysis tool (nping).


   Install Command
       dnf [options] install <spec>...
              Makes  sure  that  the  given  packages  and  their  dependencies  are  installed on the system. Each <spec> can be either a
              <package-spec>, or a @<module-spec>, or a @<group-spec>.  See Install Examples.  If a given package  or  provide  cannot  be
              (and  is  not  already)  installed,  the  exit  code will be non-zero.  If the <spec> matches both a @<module-spec> and a @‐
              <group-spec>, only the module is installed.

              When <package-spec> to specify the exact version of the package is given, DNF will install the desired  version,  no  matter
              which  version  of  the  package  is  already  installed.  The  former version of the package will be removed in the case of
              non-installonly package.

              There are also a few specific install commands install-n, install-na and install-nevra that allow the  specification  of  an
              exact argument in the NEVRA format.

              See also Configuration Files Replacement Policy.


   Remove Command
       dnf [options] remove <package-spec>...
              Removes  the specified packages from the system along with any packages depending on the packages being removed. Each <spec>
              can be either a <package-spec>, which specifies a package directly, or a @<group-spec>,  which  specifies  an  (environment)
              group which contains it. If clean_requirements_on_remove is enabled (the default), also removes any dependencies that are no
              longer needed.

       dnf [options] remove --duplicates
              Removes older versions of duplicate packages. To ensure the integrity of the system it reinstalls  the  newest  package.  In
              some  cases  the  command cannot resolve conflicts. In such cases the dnf shell command with remove --duplicates and upgrade
              dnf-shell sub-commands could help.

       dnf [options] remove --oldinstallonly
              Removes old installonly packages, keeping only latest versions and version of running kernel.

              There are also a few specific remove commands remove-n, remove-na and remove-nevra that allow the specification of an  exact
              argument in the NEVRA format.



   List Command
       Prints  lists  of packages depending on the packages' relation to the system. A package is installed if it is present in the RPMDB,
       and it is available if it is not installed but is present in a repository that DNF knows about.

       The list command also limits the displayed packages according to specific criteria, e.g. to only those  that  update  an  installed
       package  (respecting the repository priority). The exclude option in the configuration file can influence the result, but if the -‐
       -disableexcludes command line option is used, it ensures that all installed packages will be listed.

       dnf [options] list [--all] [<package-file-spec>...]
              Lists all packages, present in the RPMDB, in a repository or both.

       dnf [options] list --installed [<package-file-spec>...]
              Lists installed packages.

       dnf [options] list --available [<package-file-spec>...]
              Lists available packages.

       dnf [options] list --extras [<package-file-spec>...]
              Lists extras, that is packages installed on the system that are not available in any known repository.

       dnf [options] list --obsoletes [<package-file-spec>...]
              List packages installed on the system that are obsoleted by packages in any known repository.

       dnf [options] list --recent [<package-file-spec>...]
              List packages recently added into the repositories.

[root@localhost ~]# yum list | less


This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:26:21 ago on Sat 13 Feb 2021 08:03:45 PM MST.                       

Installed Packages
GConf2.x86_64                                          3.2.6-22.el8                                     @AppStream   

=>@AppStream is the repo name


ModemManager.x86_64                                    1.10.8-2.el8                                     @anaconda   => @anaconda as the "repo" means the package is installed
ModemManager-glib.x86_64                               1.10.8-2.el8                                     @anaconda         
NetworkManager.x86_64                                  1:1.26.0-8.el8                                   @anaconda         
NetworkManager-adsl.x86_64                             1:1.26.0-8.el8                                   @anaconda         
NetworkManager-bluetooth.x86_64                        1:1.26.0-8.el8                                   @anaconda         
NetworkManager-config-server.noarch                    1:1.26.0-8.el8                                   @anaconda         
NetworkManager-libnm.x86_64                            1:1.26.0-8.el8                                   @anaconda         
NetworkManager-team.x86_64                             1:1.26.0-8.el8                                   @anaconda         
PackageKit-gtk3-module.x86_64                          1.1.12-6.el8                                     @AppStream        
abattis-cantarell-fonts.noarch                         0.0.25-4.el8                                     @AppStream        
accountsservice.x86_64                                 0.6.50-8.el8                                     @AppStream        

[root@localhost ~]# yum list --available
zziplib-utils.x86_64                                             0.13.68-8.el8                                              AppStream-exercise
[root@localhost ~]# yum list | grep zziplib-utils.x86_64
zziplib-utils.x86_64                                   0.13.68-8.el8                                    appstream         
zziplib-utils.x86_64                                   0.13.68-8.el8                                    AppStream-exercise

# this is not installed, without @ in front of repo name

[root@localhost ~]# yum list | grep zziplib-utils.x86
zziplib-utils.x86_64                                   0.13.68-8.el8                                    appstream         
zziplib-utils.x86_64                                   0.13.68-8.el8                                    AppStream-exercise

# this can be used to check which version of the package is installed

[root@localhost ~]# yum list kernel
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:29:51 ago on Sat 13 Feb 2021 08:03:45 PM MST.
Installed Packages
kernel.x86_64                                                 4.18.0-240.el8                                                         @anaconda
Available Packages
kernel.x86_64                                                 4.18.0-240.10.1.el8_3                                                  baseos   

   Update Command
       dnf [options] update
              Deprecated alias for the Upgrade Command.

   Upgrade Command
       dnf [options] upgrade
              Updates each package to the latest version that is both available and resolvable.

       dnf [options] upgrade <package-spec>...
              Updates each specified package to the latest available version. Updates dependencies as necessary.

       dnf [options] upgrade <package-nevr-specs>...
              Upgrades packages to the specified versions.

       dnf [options] upgrade @<spec>...
              Alias for the dnf module update command.

       If the main obsoletes configure option is true or the --obsoletes flag is present, dnf will include package obsoletes in its calcu‐
       lations.  For more information see obsoletes.

       See also Configuration Files Replacement Policy.

   Group Command
       Groups  are  virtual collections of packages. DNF keeps track of groups that the user selected ("marked") installed and can manipu‐
       late the comprising packages with simple commands.

       dnf [options] group [summary] <group-spec>
              Display overview of how many groups are installed and available. With a spec, limit the output to the matching groups.  sum‐
              mary is the default groups subcommand.

       dnf [options] group info <group-spec>
              Display package lists of a group. Shows which packages are installed or available from a repository when -v is used.

       dnf [options] group install [--with-optional] <group-spec>...
              Mark  the  specified  group  installed  and  install  packages  it  contains. Also include optional packages of the group if
              --with-optional is specified. All mandatory and Default packages will be installed whenever possible.  Conditional  packages
              are installed if they meet their requirement.  If the group is already (partially) installed, the command installs the miss‐
              ing packages from the group.  Depending on the value of obsoletes configuration option group  installation  takes  obsoletes
              into account.

       dnf [options] group list <group-spec>...
              List  all  matching  groups,  either  among  installed  or available groups. If nothing is specified, list all known groups.
              --installed and --available options narrow down the requested list.  Records are ordered by the display_order tag defined in
              comps.xml  file.   Provides  a  list of all hidden groups by using option --hidden.  Provides group IDs when the -v or --ids
              options are used.

       dnf [options] group remove <group-spec>...
              Mark the group removed and remove those packages in the group from the system which do not belong to another installed group
              and were not installed explicitly by the user.

       dnf [options] group upgrade <group-spec>...
              Upgrades  the  packages  from the group and upgrades the group itself. The latter comprises of installing packages that were
              added to the group by the distribution and removing packages that got removed from  the  group  as  far  as  they  were  not
              installed explicitly by the user.

       Groups can also be marked installed or removed without physically manipulating any packages:

       dnf [options] group mark install <group-spec>...
              Mark  the  specified  group  installed.  No  packages  will  be  installed by this command, but the group is then considered
              installed.

       dnf [options] group mark remove <group-spec>...
              Mark the specified group removed. No packages will be removed by this command.

       See also Configuration Files Replacement Policy.


[root@localhost ~]# yum group list

Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 0:58:28 ago on Sat 13 Feb 2021 08:03:45 PM MST.
Available Environment Groups:
   Server
   Minimal Install
   Workstation
   Virtualization Host
   Custom Operating System
Installed Environment Groups:
   Server with GUI
Installed Groups:
   Container Management
   Headless Management
Available Groups:
   .NET Core Development
   RPM Development Tools
   Development Tools
   Graphical Administration Tools
   Legacy UNIX Compatibility
   Network Servers
   Scientific Support
   Security Tools
   Smart Card Support
   System Tools

[root@localhost ~]# yum group list --hidden

[root@localhost ~]# yum group info "Container Management"
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

Last metadata expiration check: 1:01:16 ago on Sat 13 Feb 2021 08:03:45 PM MST.

Group: Container Management
 Description: Tools for managing Linux containers
 Mandatory Packages:
   buildah
   containernetworking-plugins
   podman
 Optional Packages:
   python3-psutil


   History Command
       The history command allows the user to view what has happened in past transactions and act according to this information  (assuming
       the history_record configuration option is set).

       dnf history [list] [<spec>...]
              The default history action is listing information about given transactions in a table. Each <spec> can be either a <transac‐
              tion-spec>, which specifies a transaction directly, or a <transaction-spec>..<transaction-spec>, which specifies a range  of
              transactions, or a <package-name-spec>, which specifies a transaction by a package which it manipulated. When no transaction
              is specified, list all known transactions.

       dnf history info [<spec>...]
              Describe the given transactions. The meaning of <spec> is the same as in the History List Command. When  no  transaction  is
              specified, describe what happened during the latest transaction.

       dnf history redo <transaction-spec>|<package-file-spec>
              Repeat  the  specified  transaction.  Uses the last transaction (with the highest ID) if more than one transaction for given
              <package-file-spec> is found. If it is not possible to redo some operations due to the current state of RPMDB, it  will  not
              redo the transaction.

       dnf history rollback <transaction-spec>|<package-file-spec>
              Undo  all  transactions  performed  after the specified transaction. Uses the last transaction (with the highest ID) if more
              than one transaction for given <package-file-spec> is found.  If it is not possible to undo some  transactions  due  to  the
              current state of RPMDB, it will not undo any transaction.

       dnf history undo <transaction-spec>|<package-file-spec>
              Perform  the  opposite  operation to all operations performed in the specified transaction.  Uses the last transaction (with
              the highest ID) if more than one transaction for given <package-file-spec> is found. If it is  not  possible  to  undo  some
              operations due to the current state of RPMDB, it will not undo the transaction.

       dnf history userinstalled
              Show  all  installonly  packages,  packages installed outside of DNF and packages not installed as dependency. I.e. it lists
              packages that will stay on the system when Auto Remove Command or Remove  Command  along  with  clean_requirements_on_remove
              configuration  option set to True is executed. Note the same results can be accomplished with dnf repoquery --userinstalled,
              and the repoquery command is more powerful in formatting of the output.

       This command by default does not force a sync of expired metadata, except for the redo, rollback, and undo subcommands.   See  also
       Metadata Synchronization and Configuration Files Replacement Policy.

[root@localhost ~]# yum history
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.

ID     | Command line                                                                            | Date and time    | Action(s)      | Altered
----------------------------------------------------------------------------------------------------------------------------------------------
     7 |                                                                                         | 2021-02-13 20:16 | Install        |    1   
     6 | module install httpd                                                                    | 2021-01-25 01:10 | Install        |    1   
     5 | install curl                                                                            | 2021-01-25 01:06 | Upgrade        |    2   
     4 | install httpd                                                                           | 2021-01-25 00:57 | Install        |    9   
     3 |                                                                                         | 2021-01-24 23:10 | Install        |    1   
     2 | -y install tuned                                                                        | 2021-01-24 22:10 | Upgrade        |    1   
     1 |                                                                                         | 2021-01-22 23:25 | Install        | 1371 EE