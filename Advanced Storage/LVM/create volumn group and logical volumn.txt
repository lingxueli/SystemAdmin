# how to find the right command when create LVM
# vg tab
[root@localhost ~]# vg
vgcfgbackup    vgck           vgdisplay      vgimport       vgmknodes      vgrename       vgsplit
vgcfgrestore   vgconvert      vgexport       vgimportclone  vgreduce       vgs            
vgchange       vgcreate       vgextend       vgmerge        vgremove       vgscan         

[root@localhost ~]# vgcreate --help
  vgcreate - Create a volume group

  vgcreate VG_new PV ...
	[ -A|--autobackup y|n ]
	[ -c|--clustered y|n ]
	[ -l|--maxlogicalvolumes Number ]
	[ -p|--maxphysicalvolumes Number ]
	[ -M|--metadatatype lvm2 ]
	[ -s|--physicalextentsize Size[m|UNIT] ]
	[ -f|--force ]
	[ -Z|--zero y|n ]
	[    --addtag Tag ]
	[    --alloc contiguous|cling|cling_by_tags|normal|anywhere|inherit ]
	[    --metadataprofile String ]
	[    --labelsector Number ]
	[    --metadatasize Size[m|UNIT] ]
	[    --pvmetadatacopies 0|1|2 ]
	[    --vgmetadatacopies all|unmanaged|Number ]
	[    --reportformat basic|json ]
	[    --dataalignment Size[k|UNIT] ]
	[    --dataalignmentoffset Size[k|UNIT] ]
	[    --shared ]
	[    --systemid String ]
	[    --locktype sanlock|dlm|none ]
	[ COMMON_OPTIONS ]

  Common options for lvm:
	[ -d|--debug ]
	[ -h|--help ]
	[ -q|--quiet ]
	[ -v|--verbose ]
	[ -y|--yes ]
	[ -t|--test ]
	[    --commandprofile String ]
	[    --config String ]
	[    --driverloaded y|n ]
	[    --nolocking ]
	[    --lockopt String ]
	[    --longhelp ]
	[    --profile String ]
	[    --version ]

  Use --longhelp to show all options and advanced commands.


$ man vgcreate
EXAMPLES
       Create a VG with two PVs, using the default physical extent size.
       vgcreate myvg /dev/sdk1 /dev/sdl1


$ vgs
$ vgdisplay

[root@localhost ~]# pvs
  PV             VG   Fmt  Attr PSize    PFree   
  /dev/nvme0n1p2 rhel lvm2 a--    10.00g       0 
  /dev/nvme0n2p1      lvm2 ---  1023.00m 1023.00m
[root@localhost ~]# vgcreate vgdata /dev/nvme0n2p1
  Volume group "vgdata" successfully created

[root@localhost ~]# vgs
  VG     #PV #LV #SN Attr   VSize    VFree   
  rhel     1   1   0 wz--n-   10.00g       0 
  vgdata   1   0   0 wz--n- 1020.00m 1020.00m

[root@localhost ~]# pvs
  PV             VG     Fmt  Attr PSize    PFree   
  /dev/nvme0n1p2 rhel   lvm2 a--    10.00g       0 
  /dev/nvme0n2p1 vgdata lvm2 a--  1020.00m 1020.00m


$ man lvcreate

       -L|--size Size[m|UNIT]
              Specifies the size of the new LV.  The --size and --extents options are alternate methods of
              specifying size.  The total number of physical extents used will be greater when redundant
              data is needed for RAID levels.

       -l|--extents Number[PERCENT]
              Specifies the size of the new LV in logical extents.  The --size and --extents options are
              alternate methods of specifying size.  The total number of physical extents used will be
              greater when redundant data is needed for RAID levels.  An alternate syntax allows the size
              to be determined indirectly as a percentage of the size of a related VG, LV, or set of PVs.
              The suffix %VG denotes the total size of the VG, the suffix %FREE the remaining free space in
              the VG, and the suffix %PVS the free space in the specified PVs.  For a snapshot, the size
              can be expressed as a percentage of the total size of the origin LV with the suffix %ORIGIN
              (100%ORIGIN provides space for the whole origin).  When expressed as a percentage, the size
              defines an upper limit for the number of logical extents in the new LV. The precise number of
              logical extents in the new LV is not determined until the command has completed.

       -n|--name String
              Specifies the name of a new LV.  When unspecified, a default name of "lvol#" is generated,
              where # is a number generated by LVM.


[root@localhost ~]# lvcreate -n lvdata -l 50%FREE vgdata
  Logical volume "lvdata" created.

[root@localhost ~]# lvs
  LV     VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root   rhel   -wi-ao----  10.00g                                                    
  lvdata vgdata -wi-a----- 508.00m                                                    

[root@localhost ~]# mkfs.ext4 /dev/vgdata/lvdata
mke2fs 1.45.6 (20-Mar-2020)
Creating filesystem with 520192 1k blocks and 130048 inodes
Filesystem UUID: e64b7f54-0dee-42bb-b80a-44d45883eafb
Superblock backups stored on blocks: 
	8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done 


[root@localhost ~]# mkdir /files
[root@localhost ~]# vi /etc/fstab 
[root@localhost ~]# cat /etc/fstab

#
# /etc/fstab
# Created by anaconda on Tue Sep 22 05:12:05 2020
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/rhel-root   /                       xfs     defaults        0 0
UUID=5c786174-e864-4c37-a912-b92b4a4b138e /boot                   ext4    defaults        1 2
UUID=5bf6a3dc-0a2f-4ca8-b2e9-787052b37f7d none                    swap    defaults        0 0
UUID="9d2fd572-f810-481a-a737-1d90c25d1141"	/mounts/data	xfs	defaults	1	2
/dev/vgdata/lvdata	/files	ext4	defaults	0	0
[root@localhost ~]# mount -a
[root@localhost ~]# df -h
Filesystem                 Size  Used Avail Use% Mounted on
devtmpfs                   1.8G     0  1.8G   0% /dev
tmpfs                      1.9G     0  1.9G   0% /dev/shm
tmpfs                      1.9G   10M  1.9G   1% /run
tmpfs                      1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/mapper/rhel-root       10G  4.7G  5.4G  47% /
/dev/nvme0n1p5              95M  6.0M   89M   7% /mounts/data
/dev/nvme0n1p1             488M  162M  291M  36% /boot
tmpfs                      371M  1.2M  370M   1% /run/user/42
tmpfs                      371M  4.6M  367M   2% /run/user/1000
/dev/sr0                   8.5G  8.5G     0 100% /run/media/lisa/RHEL-8-3-0-BaseOS-x86_64
/dev/mapper/vgdata-lvdata  484M  2.3M  453M   1% /files